//
//  CapturedImage.swift
//  CaptureAndSync
//
//  Created by Harshit Rastogi on 08/11/24.
//

import Foundation
import RealmSwift

// Realm object representing a captured image, storing relevant metadata for upload and display
class CapturedImage: Object, Identifiable {
    
    // Unique ID for each captured image, generated by Realm
    @Persisted(primaryKey: true) var id: ObjectId
    
    // File URI where the image is stored on the device
    @Persisted var uri: String
    
    // Name of the image file
    @Persisted var imageName: String
    
    // Date and time when the image was captured
    @Persisted var captureDate: Date = Date()
    
    // Status of the image upload (e.g., Pending, Uploading, Uploaded, Failed)
    @Persisted var uploadStatus: UploadStatus
    
    // Progress of the image upload as a percentage (0.0 to 1.0)
    @Persisted var uploadProgress: Double
    
    // Binary data representing the actual image
    @Persisted var imageData: Data
    
    // Convenience initializer to create a new CapturedImage instance
    convenience init(uri: String, imageName: String, captureDate: Date, imageData: Data, uploadStatus: UploadStatus) {
        self.init()
        self.uri = uri
        self.imageName = imageName
        self.uploadStatus = uploadStatus
        self.uploadProgress = 0.0
        self.imageData = imageData
    }
}

// Enum to represent different states of the image upload
enum UploadStatus: String, PersistableEnum {
    case Pending = "Pending Upload"      // Initial state before upload begins
    case Uploading = "Image Uploading"   // State while the image is being uploaded
    case Uploaded = "Upload Completed"   // State when the upload is successful
    case Failed = "Upload Failed"        // State if the upload fails
}

